# Quem √© voc√™?

Voc√™ √© um desenvolvedor de software s√™nior, que preza pela simplicidade e objetividade.

# Contexto

Este projeto dever√° se chamar MagicQuery ü™Ñ. Seu  objetivo √© demonstrar como √© poss√≠vel criar sistemas de IA para realizar consultas a bancos de dados.

A grande id√©ia aqui √© mostrar que com as tecnologiasm atuais, podemos delegar ao usu√°rio a possibilidade de pensar em quais dados ele quer ver, a partir de uma mensagem em linguagem natural.

# Tecnologias

- Express.js
- Node
- AI SDK
- SQLite
- Ollama

# O que deve ser o projeto?

Deve-se criar um sistema bastante simples de demonstra√ß√£o.

Este √© um sistema simples de telemetria.

Use como base essa estrutura de tabelas para a cria√ß√£o do sistema:

```sql
CREATE TABLE drivers (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE devices (
    id SERIAL PRIMARY KEY,
    identifier VARCHAR(50) UNIQUE NOT NULL,
    model VARCHAR(50),
    vehicle_plate VARCHAR(10),
    driver_id INT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (driver_id) REFERENCES drivers(id) ON DELETE SET NULL
);

CREATE TABLE positions (
    id SERIAL PRIMARY KEY,
    device_id INT NOT NULL,
    latitude DECIMAL(10, 6) NOT NULL,
    longitude DECIMAL(10, 6) NOT NULL,
    speed DECIMAL(6, 2),
    direction SMALLINT,
    collected_at TIMESTAMP NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (device_id) REFERENCES devices(id) ON DELETE CASCADE
);
```

## Implementa√ß√£o base

- Crie toda a estrutura de banco de dados;
- Crie arquivos de Seed para que dados possam ser inseridos (√© importante que tenhamos alguns dados para que seja poss√≠vel demonstrar a utuliza√ß√£o da ferramenta);
- Crie os sistemas de migrations;
- Crie os endpoints para realizar os CRUDs;

## Implementa√ß√£o principal

- Crie um endpoint `POST /query` que dever√° receber uma mensagem do usu√°rio.
- Este endpoint dever√° receber a mensagem enviada, e utilizando o `AI SDK` da vercel, deve-se implementar uma forma de gerar a consulta ao banco de dados (SQL) a partir da mensagem enviada;
- Lembre-se de informar a estrutura de SQL para a ferramenta;
- Lembre-se de criar um prompt que deixe claro que as consultas devem ser apenas de QUERY, nunca de altera√ß√£o dos dados;

# Regras

- Toda a implementa√ß√£o deve ser feita em ingl√™s
- Crie logs para que seja poss√≠vel monitorar as a√ß√µes
- Crie arquivos de teste do tipo `nome_recurso.http` que fa√ßam todo o teste via requests (estes arquivos devem ser criados na pasta `test`)
- Voc√™ deve criar a camada de controllers, services e routes para que o projeto seja organizado
- Voc√™ deve validar o payload de todas as entradas da API
- Crie um arquivo de README.md com as instru√ß√µes de como executar o projeto
- Utilize typescript para a implementa√ß√£o
- Utilize PNPM para gerenciar as depend√™ncias
- Utilize o m√≥dulo `zod` para validar o payload das entradas da API
- Crie toda a implementa√ß√£o dentro de uma pasta chamada `src`
- O arquivo principal da aplica√ß√£o deve ser o `server.ts`

# SDK de IA

Utilize a documenta√ß√£o do `https://sdk.vercel.ai/` para a implementa√ß√£o do AI SDK.

√â importante que voc√™ utilize o `ollama` para a implementa√ß√£o do modelo de IA.

A rota `query` deve receber uma mensagem.

Com a mensagem em m√£os, voc√™ deve configurar o SDK para que ele possa reconhecer a mensagem na linguagem natural, gerar e executar uma query, e retornar uma resposta tamb√©m em texto para o usu√°rio.